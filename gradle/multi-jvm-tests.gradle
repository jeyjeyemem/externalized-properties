// Ideally every LTS release (succeeding the toolchain's Java language version) 
// plus the latest released Java version.
def additionalTestRunsOnJvmVersions = 
    System.getenv("ADDITIONAL_TEST_RUNS_ON_JVM_VERSIONS") ?:
    System.getProperties().getOrDefault("additionalTestRunsOnJvmVersions", "8,17,18")

additionalTestRunsOnJvmVersions.split(",").findAll({ !it.isEmpty() }).each { javaVersion ->
    def testTaskName = "testOnJava${javaVersion}"

    tasks.register(testTaskName, Test) {
        useJUnitPlatform()

        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        }

        if (Integer.valueOf(javaVersion) >= 17) {
            // We are reflectively setting environment variable in some unit tests.
            // As of Java 17, this is no longer permitted. We need this flag to re-enable
            // the hack.
            jvmArgs = [ "--add-opens=java.base/java.util=ALL-UNNAMED" ]
        }
    }

    tasks.named("check").configure {
        dependsOn tasks.named(testTaskName)
    }
}